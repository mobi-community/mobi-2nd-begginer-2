UI라이브러리 장단점

(1) tailwind-css 
    참고 사이트 
    https://www.jeje01.me/css/overview-and-usage-of-tailwind-css/

    장점
        1. CSS를 작성할 때 시간을 많이 절약할 수 있음
        2. 컴포넌트 생성과 관리가 쉬우며, 유지보수하기 편함
        3. 프로그래밍 언어와 같은 추상화 수준을 제공해 스타일을 빠르게 적용할 수 있어 코드의 길이가 줄고, 개발 시간이 절약됨
        4. 커스터마이징이 쉬워 원하는대로 디자인을 변경할 수 있음
        5. 반응형 디자인 구현도 쉬워짐

    단점
        1. 새로운 스타일을 사용하면 CSS 클래스를 생성하게 되어 CSS 파일 크기가 커지고 페이지 로드 시간도 늘어날 수 있음
        2. 다른 개발자들과 협업할 경우 CSS파일에 충돌이 생겨 해결해야 함
        3. 의존성을 가져 더 많은 코드가 필요하게 됨
        4. tailwind를 사용할 수 없는 스타일인 경우에 별도의 css 파일을 생성해야 하기 때문에 일관성 있는 스타일링이 어려울 수 있음    

(2) panda-css
    참고 사이트
    https://velog.io/@jay/Panda-CSS

    장점 
        1. zero-runtime CSS-in-JS 라이브러리로, 런타임에 CSS를 생성하지 않으면서 페이지를 더 빨리 로드할 수 있습니다.

(3) stlyed-components
    장점
        1. CSS를 컴포넌트 안으로 캡슐화, 네이밍이나 최적화를 신경 쓸 필요가 없다.

    단점
        1. 빠른 페이지 로드에 불리하다.    

(4) emotion
    장점
        1. Emotion을 사용하여 React 컴포넌트를 스타일링할 때, css prop을 직접 컴포넌트에 전달할 수 있다.
        2. css prop은 동적으로 스타일을 적용하는 데도 아주 유용하다.
        3. css prop은 여러 스타일을 쉽게 결합할 수 있게 해준다.

(1) MUI
(2) Chakra UI
(3) TailwindCSS UI
(4) Shadcn UI
(5) Heaedless UI